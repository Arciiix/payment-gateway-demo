/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthNotauthenticatedImport } from './routes/auth/_not_authenticated'
import { Route as AuthNotauthenticatedRegisterImport } from './routes/auth/_not_authenticated/register'
import { Route as AuthNotauthenticatedLoginImport } from './routes/auth/_not_authenticated/login'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()
const AuthenticatedPaymentSuccessLazyImport = createFileRoute(
  '/_authenticated/payment/success',
)()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const AuthNotauthenticatedRoute = AuthNotauthenticatedImport.update({
  id: '/_not_authenticated',
  getParentRoute: () => AuthRoute,
} as any)

const AuthenticatedPaymentSuccessLazyRoute =
  AuthenticatedPaymentSuccessLazyImport.update({
    id: '/payment/success',
    path: '/payment/success',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/payment/success.lazy').then((d) => d.Route),
  )

const AuthNotauthenticatedRegisterRoute =
  AuthNotauthenticatedRegisterImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => AuthNotauthenticatedRoute,
  } as any)

const AuthNotauthenticatedLoginRoute = AuthNotauthenticatedLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthNotauthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_not_authenticated': {
      id: '/auth/_not_authenticated'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthNotauthenticatedImport
      parentRoute: typeof AuthRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/auth/_not_authenticated/login': {
      id: '/auth/_not_authenticated/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthNotauthenticatedLoginImport
      parentRoute: typeof AuthNotauthenticatedImport
    }
    '/auth/_not_authenticated/register': {
      id: '/auth/_not_authenticated/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthNotauthenticatedRegisterImport
      parentRoute: typeof AuthNotauthenticatedImport
    }
    '/_authenticated/payment/success': {
      id: '/_authenticated/payment/success'
      path: '/payment/success'
      fullPath: '/payment/success'
      preLoaderRoute: typeof AuthenticatedPaymentSuccessLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexLazyRoute: typeof AuthenticatedIndexLazyRoute
  AuthenticatedPaymentSuccessLazyRoute: typeof AuthenticatedPaymentSuccessLazyRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexLazyRoute: AuthenticatedIndexLazyRoute,
  AuthenticatedPaymentSuccessLazyRoute: AuthenticatedPaymentSuccessLazyRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthNotauthenticatedRouteChildren {
  AuthNotauthenticatedLoginRoute: typeof AuthNotauthenticatedLoginRoute
  AuthNotauthenticatedRegisterRoute: typeof AuthNotauthenticatedRegisterRoute
}

const AuthNotauthenticatedRouteChildren: AuthNotauthenticatedRouteChildren = {
  AuthNotauthenticatedLoginRoute: AuthNotauthenticatedLoginRoute,
  AuthNotauthenticatedRegisterRoute: AuthNotauthenticatedRegisterRoute,
}

const AuthNotauthenticatedRouteWithChildren =
  AuthNotauthenticatedRoute._addFileChildren(AuthNotauthenticatedRouteChildren)

interface AuthRouteChildren {
  AuthNotauthenticatedRoute: typeof AuthNotauthenticatedRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthNotauthenticatedRoute: AuthNotauthenticatedRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthNotauthenticatedRouteWithChildren
  '/': typeof AuthenticatedIndexLazyRoute
  '/auth/login': typeof AuthNotauthenticatedLoginRoute
  '/auth/register': typeof AuthNotauthenticatedRegisterRoute
  '/payment/success': typeof AuthenticatedPaymentSuccessLazyRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthNotauthenticatedRouteWithChildren
  '/': typeof AuthenticatedIndexLazyRoute
  '/auth/login': typeof AuthNotauthenticatedLoginRoute
  '/auth/register': typeof AuthNotauthenticatedRegisterRoute
  '/payment/success': typeof AuthenticatedPaymentSuccessLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_not_authenticated': typeof AuthNotauthenticatedRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexLazyRoute
  '/auth/_not_authenticated/login': typeof AuthNotauthenticatedLoginRoute
  '/auth/_not_authenticated/register': typeof AuthNotauthenticatedRegisterRoute
  '/_authenticated/payment/success': typeof AuthenticatedPaymentSuccessLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/payment/success'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/' | '/auth/login' | '/auth/register' | '/payment/success'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/auth/_not_authenticated'
    | '/_authenticated/'
    | '/auth/_not_authenticated/login'
    | '/auth/_not_authenticated/register'
    | '/_authenticated/payment/success'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/payment/success"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_not_authenticated"
      ]
    },
    "/auth/_not_authenticated": {
      "filePath": "auth/_not_authenticated.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_not_authenticated/login",
        "/auth/_not_authenticated/register"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/auth/_not_authenticated/login": {
      "filePath": "auth/_not_authenticated/login.tsx",
      "parent": "/auth/_not_authenticated"
    },
    "/auth/_not_authenticated/register": {
      "filePath": "auth/_not_authenticated/register.tsx",
      "parent": "/auth/_not_authenticated"
    },
    "/_authenticated/payment/success": {
      "filePath": "_authenticated/payment/success.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
